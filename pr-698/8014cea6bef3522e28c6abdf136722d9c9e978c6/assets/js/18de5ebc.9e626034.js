"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[972],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4813:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(7294),o=n(6010),a=n(3605),i=n(1984),l=n(7785),s=n(2210);const p={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function c({href:e,children:t}){return r.createElement(i.Z,{href:e,className:(0,o.Z)("card padding--lg",p.cardContainer)},t)}function m({href:e,icon:t,title:n,description:a}){return r.createElement(c,{href:e},r.createElement("h2",{className:(0,o.Z)("text--truncate",p.cardTitle),title:n},t," ",n),a&&r.createElement("p",{className:(0,o.Z)("text--truncate",p.cardDescription),title:a},a))}function u({item:e}){const t=(0,a.Wl)(e);return t?r.createElement(m,{href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:null!==(n=e.description)&&void 0!==n?n:(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e.items.length})}):null;var n}function d({item:e}){var t;const n=(0,l.Z)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17";var o;const i=(0,a.xz)(null!==(o=e.docId)&&void 0!==o?o:void 0);var s;return r.createElement(m,{href:e.href,icon:n,title:e.label,description:null!==(s=e.description)&&void 0!==s?s:null===(t=i)||void 0===t?void 0:t.description})}function f({item:e}){switch(e.type){case"link":return r.createElement(d,{item:e});case"category":return r.createElement(u,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function g({className:e}){const t=(0,a.jA)();return r.createElement(h,{items:t.items,className:e})}function h(e){const{items:t,className:n}=e;if(!t)return r.createElement(g,e);const i=(0,a.MN)(t);return r.createElement("section",{className:(0,o.Z)("row",n)},i.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(f,{item:e})))))}},5544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>u});n(7294);var r=n(3905),o=n(4813);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={hide_table_of_contents:!0,sidebar_label:"Prompt Templates",sidebar_position:1},p="Prompt templates",c={unversionedId:"modules/model_io/prompts/prompt_templates/index",id:"modules/model_io/prompts/prompt_templates/index",title:"Prompt templates",description:"Conceptual Guide",source:"@site/docs/modules/model_io/prompts/prompt_templates/index.mdx",sourceDirName:"modules/model_io/prompts/prompt_templates",slug:"/modules/model_io/prompts/prompt_templates/",permalink:"/langchaingo/docs/modules/model_io/prompts/prompt_templates/",draft:!1,editUrl:"https://github.com/tmc/langchaingo/edit/main/docs/docs/modules/model_io/prompts/prompt_templates/index.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{hide_table_of_contents:!0,sidebar_label:"Prompt Templates",sidebar_position:1},sidebar:"sidebar",previous:{title:"Prompts",permalink:"/langchaingo/docs/modules/model_io/prompts/"},next:{title:"Partial Values",permalink:"/langchaingo/docs/modules/model_io/prompts/prompt_templates/partial_values"}},m={},u=[{value:"Creating prompt templates for chat messages",id:"creating-prompt-templates-for-chat-messages",level:2},{value:"Dig deeper",id:"dig-deeper",level:2}],d={toc:u},f="wrapper";function g(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)(f,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prompt-templates"},"Prompt templates"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://python.langchain.com/docs/modules/model_io/prompts/quick_start#prompttemplate"},"Conceptual Guide"))),(0,r.kt)("p",null,"A fundemental part of working with language models is taking some input and formatting it in some way using a template.\nDoing this is simple using LangChain. Here is a simple example: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/tmc/langchaingo/prompts"\n\nfunc main() {\n    prompt := prompts.NewPromptTemplate(\n        "What is a good name for a company that makes {{.product}}?",\n        []string{"product"}, \n    )\n\n    result, err := prompt.Format(map[string]any{\n        "product": "colorful socks",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(result)\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"What is a good name for a company that makes colorful socks?\n")),(0,r.kt)("p",null,"A prompt template can take any number of inputs as shown belown."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'prompt := prompts.NewPromptTemplate(\n    "Tell me a {{.adjective}} joke about {{.content}}.",\n    []string{"adjective", "content"}, \n)\n\nresult, err := prompt.Format(map[string]any{\n    "adjective": "funny",\n    "content": "chickens", \n})\nif err != nil {\n    log.Fatal(err)\n}\n\nfmt.Println(result)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Tell me a funny joke about chickens.\n")),(0,r.kt)("h2",{id:"creating-prompt-templates-for-chat-messages"},"Creating prompt templates for chat messages"),(0,r.kt)("p",null,"Chat Models take a list of chat messages as input - this list is commonly referred to as a prompt.\nThese chat messages differ from a raw string (which you would pass into a LLM model), in that every message is associated with a role."),(0,r.kt)("p",null,"For example, in OpenAI Chat Completion API, a chat message can be associated with the AI, human or system role.\nThe model is supposed to follow instruction from system chat message more closely."),(0,r.kt)("p",null,"You are encouraged to use these chat related prompt templates instead of PromptTemplate when querying chat models to fully exploit the potential of underlying chat model."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/tmc/langchaingo/prompts"\n\nfunc main() {\n   prompt := prompts.NewChatPromptTemplate([]MessageFormatter{\n        NewSystemMessagePromptTemplate(\n            "You are a translation engine that can only translate text and cannot interpret it.",\n            nil,\n        ),\n        NewHumanMessagePromptTemplate(\n            `translate this text from {{.inputLang}} to {{.outputLang}}:\\n{{.input}}`,\n            []string{"inputLang", "outputLang", "input"},\n        ),\n    })\n\n    result, err := prompt.Format(map[string]any{\n        "inputLang": "English",\n        "outputLang": "Chinese",\n        "input": "I love programming",\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(result)\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[{You are a translation engine that can only translate text and cannot interpret it.} {translate this text from English to Chinese:\\nI love programming}]\n")),(0,r.kt)("h2",{id:"dig-deeper"},"Dig deeper"),(0,r.kt)(o.Z,{mdxType:"DocCardList"}))}g.isMDXComponent=!0}}]);