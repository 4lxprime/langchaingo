"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[963],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4813:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(7294),o=n(6010),a=n(3605),i=n(1984),l=n(7785),s=n(2210);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d({href:e,children:t}){return r.createElement(i.Z,{href:e,className:(0,o.Z)("card padding--lg",c.cardContainer)},t)}function u({href:e,icon:t,title:n,description:a}){return r.createElement(d,{href:e},r.createElement("h2",{className:(0,o.Z)("text--truncate",c.cardTitle),title:n},t," ",n),a&&r.createElement("p",{className:(0,o.Z)("text--truncate",c.cardDescription),title:a},a))}function p({item:e}){const t=(0,a.Wl)(e);return t?r.createElement(u,{href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:null!==(n=e.description)&&void 0!==n?n:(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e.items.length})}):null;var n}function m({item:e}){var t;const n=(0,l.Z)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17";var o;const i=(0,a.xz)(null!==(o=e.docId)&&void 0!==o?o:void 0);var s;return r.createElement(u,{href:e.href,icon:n,title:e.label,description:null!==(s=e.description)&&void 0!==s?s:null===(t=i)||void 0===t?void 0:t.description})}function f({item:e}){switch(e.type){case"link":return r.createElement(m,{item:e});case"category":return r.createElement(p,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function g({className:e}){const t=(0,a.jA)();return r.createElement(h,{items:t.items,className:e})}function h(e){const{items:t,className:n}=e;if(!t)return r.createElement(g,e);const i=(0,a.MN)(t);return r.createElement("section",{className:(0,o.Z)("row",n)},i.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(f,{item:e})))))}},7578:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>p});n(7294);var r=n(3905),o=n(4813);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={sidebar_position:2,hide_table_of_contents:!0,sidebar_label:"Models"},c="Models",d={unversionedId:"modules/model_io/models/index",id:"modules/model_io/models/index",title:"Models",description:"Conceptual Guide",source:"@site/docs/modules/model_io/models/index.mdx",sourceDirName:"modules/model_io/models",slug:"/modules/model_io/models/",permalink:"/langchaingo/docs/modules/model_io/models/",draft:!1,editUrl:"https://github.com/tmc/langchaingo/edit/main/docs/docs/modules/model_io/models/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,hide_table_of_contents:!0,sidebar_label:"Models"},sidebar:"sidebar",previous:{title:"Partial Values",permalink:"/langchaingo/docs/modules/model_io/prompts/prompt_templates/partial_values"},next:{title:"LLMs",permalink:"/langchaingo/docs/modules/model_io/models/llms/"}},u={},p=[{value:"All Models",id:"all-models",level:2},{value:"Advanced",id:"advanced",level:2}],m={toc:p},f="wrapper";function g(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)(f,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"models"},"Models"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://python.langchain.com/docs/modules/model_io"},"Conceptual Guide"))),(0,r.kt)("p",null,"Models are a core component of LangChain. LangChain is not a provider of models, but rather provides a standard interface through which you can interact with a variety of language models.\nLangChain provides support for both text-based Large Language Models (LLMs), Chat Models, and Text Embedding models."),(0,r.kt)("p",null,"LLMs use a text-based input and output, while Chat Models use a message-based input and output."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," Chat model APIs are fairly new, so we are still figuring out the correct abstractions. If you have any feedback, please let us know!")),(0,r.kt)("h2",{id:"all-models"},"All Models"),(0,r.kt)(o.Z,{mdxType:"DocCardList"}),(0,r.kt)("h2",{id:"advanced"},"Advanced"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This section is for users who want a deeper technical understanding of how LangChain works. If you are just getting started, you can skip this section.")),(0,r.kt)("p",null,"All LLMs and Chat Models implement the BaseLanguage interface. This allows us to easily swap out models in chains without changing the rest of the code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// LanguageModel is the interface all language models must implement.\ntype LanguageModel interface {\n    // Take in a list of prompt values and return an LLMResult.\n    GeneratePrompt(ctx context.Context, prompts []schema.PromptValue, options ...CallOption) (LLMResult, error)\n    // Get the number of tokens present in the text.\n    GetNumTokens(text string) int\n}\n")),(0,r.kt)("p",null,"In adition to implementing the LanguageModel interface, LLMs also implements the LLM interface."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type LLM interface {\n    Call(ctx context.Context, prompt string, options ...CallOption) (string, error)\n    Generate(ctx context.Context, prompts []string, options ...CallOption) ([]*Generation, error)\n}\n")),(0,r.kt)("p",null,"The same is true for chat models, they implement both the LanguageModel interface and the ChatLLM interface."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type ChatLLM interface {\n    Call(ctx context.Context, messages []schema.ChatMessage, options ...CallOption) (schema.ChatMessage, error)\n    Generate(ctx context.Context, messages [][]schema.ChatMessage, options ...CallOption) ([]*Generation, error)\n}\n")))}g.isMDXComponent=!0}}]);