"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[832],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=o,f=m["".concat(l,".").concat(p)]||m[p]||u[p]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4813:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(7294),o=n(6010),a=n(3605),i=n(1984),s=n(7785),l=n(2210);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d({href:e,children:t}){return r.createElement(i.Z,{href:e,className:(0,o.Z)("card padding--lg",c.cardContainer)},t)}function m({href:e,icon:t,title:n,description:a}){return r.createElement(d,{href:e},r.createElement("h2",{className:(0,o.Z)("text--truncate",c.cardTitle),title:n},t," ",n),a&&r.createElement("p",{className:(0,o.Z)("text--truncate",c.cardDescription),title:a},a))}function u({item:e}){const t=(0,a.Wl)(e);return t?r.createElement(m,{href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:null!==(n=e.description)&&void 0!==n?n:(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e.items.length})}):null;var n}function p({item:e}){var t;const n=(0,s.Z)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17";var o;const i=(0,a.xz)(null!==(o=e.docId)&&void 0!==o?o:void 0);var l;return r.createElement(m,{href:e.href,icon:n,title:e.label,description:null!==(l=e.description)&&void 0!==l?l:null===(t=i)||void 0===t?void 0:t.description})}function f({item:e}){switch(e.type){case"link":return r.createElement(p,{item:e});case"category":return r.createElement(u,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function h({className:e}){const t=(0,a.jA)();return r.createElement(g,{items:t.items,className:e})}function g(e){const{items:t,className:n}=e;if(!t)return r.createElement(h,e);const i=(0,a.MN)(t);return r.createElement("section",{className:(0,o.Z)("row",n)},i.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(f,{item:e})))))}},6189:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>u});n(7294);var r=n(3905),o=n(4813);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={sidebar_position:2,hide_table_of_contents:!0,sidebar_label:"Chat Models"},c="Getting Started: Chat Models",d={unversionedId:"modules/model_io/models/chat/index",id:"modules/model_io/models/chat/index",title:"Getting Started: Chat Models",description:"Conceptual Guide",source:"@site/docs/modules/model_io/models/chat/index.mdx",sourceDirName:"modules/model_io/models/chat",slug:"/modules/model_io/models/chat/",permalink:"/langchaingo/docs/modules/model_io/models/chat/",draft:!1,editUrl:"https://github.com/tmc/langchaingo/edit/main/docs/docs/modules/model_io/models/chat/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,hide_table_of_contents:!0,sidebar_label:"Chat Models"},sidebar:"sidebar",previous:{title:"Vertex AI",permalink:"/langchaingo/docs/modules/model_io/models/llms/Integrations/vertexai"},next:{title:"Integrations",permalink:"/langchaingo/docs/modules/model_io/models/chat/integrations"}},m={},u=[{value:"Chat Messages",id:"chat-messages",level:2},{value:"Dig deeper",id:"dig-deeper",level:2}],p={toc:u},f="wrapper";function h(e){var{components:t}=e,n=s(e,["components"]);return(0,r.kt)(f,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-chat-models"},"Getting Started: Chat Models"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://python.langchain.com/docs/modules/model_io/chat"},"Conceptual Guide"))),(0,r.kt)("p",null,'LangChain provides a standard interface for using chat models. Chat models are a variation on language models.\nWhile chat models use language models under the hood, the interface they expose is a bit different.\nRather than expose a "text in, text out" API, they expose an interface where "chat messages" are the inputs and outputs.'),(0,r.kt)("h2",{id:"chat-messages"},"Chat Messages"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatMessage")," is what we refer to as the modular unit of information for a chat model.\nAt the moment, this consists of a ",(0,r.kt)("inlineCode",{parentName:"p"},'"text"')," field, which refers to the content of the chat message."),(0,r.kt)("p",null,"There are currently four different classes of ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatMessage")," supported by LangChain:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HumanChatMessage"),": A chat message that is sent as if from a Human's point of view."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AIChatMessage"),": A chat message that is sent from the point of view of the AI system to which the Human is corresponding."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SystemChatMessage"),": A chat message that gives the AI system some information about the conversation. This is usually sent at the beginning of a conversation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ChatMessage"),": A generic chat message, with not only a ",(0,r.kt)("inlineCode",{parentName:"li"},'"text"')," field but also an arbitrary ",(0,r.kt)("inlineCode",{parentName:"li"},'"role"')," field.")),(0,r.kt)("h2",{id:"dig-deeper"},"Dig deeper"),(0,r.kt)(o.Z,{mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);